name: CI for Monorepo with Turbo and Changed Files Detection

on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  turbo:
    runs-on: ubuntu-latest

    # Set up environment variables
    env:
      NEXT_PUBLIC_PRODUCT_NAME: "ClapUp"
      NEXT_PUBLIC_SITE_TITLE: "Clapper Digital Business Card"
      NEXT_PUBLIC_SITE_DESCRIPTION: "App"
      NEXT_PUBLIC_SITE_URL: "https://localhost:3000"
      NEXT_PUBLIC_DEFAULT_LOCALE: "en"
      NEXT_PUBLIC_DEFAULT_THEME_MODE: "light"    
      NEXT_PUBLIC_THEME_COLOR: "#22C55E"
      NEXT_PUBLIC_THEME_COLOR_DARK: "#1e1e1e"

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2
 
      # Install pnpm using the official pnpm/action-setup
      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      # Set up Node.js
      - name: Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Cache dependencies and Turbo's output
      - name: Cache node_modules and Turbo output
        uses: actions/cache@v2
        with:
          path: |
            node_modules
            .turbo
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # Cache pnpm dependencies
      - name: Cache pnpm dependencies
        uses: actions/cache@v2
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-
            
      # Install dependencies using pnpm
      - name: Install dependencies
        run: pnpm install

      # Fetch the dev branch to make it available for comparison
      - name: Fetch dev branch
        run: git fetch origin dev

      # Run build for only affected packages (based on changed files)
      - name: Build changed packages
        run: pnpm dlx turbo@latest run build --filter=...[origin/dev]

      # Run tests only for changed packages
      - name: Run tests for changed packages
        run: pnpm dlx turbo@latest run test --filter=...[origin/dev]
